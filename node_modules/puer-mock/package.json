{
  "_args": [
    [
      {
        "raw": "puer-mock",
        "scope": null,
        "escapedName": "puer-mock",
        "name": "puer-mock",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "E:\\ygg"
    ]
  ],
  "_from": "puer-mock@latest",
  "_id": "puer-mock@1.2.0",
  "_inCache": true,
  "_location": "/puer-mock",
  "_nodeVersion": "4.4.7",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/puer-mock-1.2.0.tgz_1473843602772_0.9527465968858451"
  },
  "_npmUser": {
    "name": "ufologist",
    "email": "klsforver@gmail.com"
  },
  "_npmVersion": "2.15.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "puer-mock",
    "scope": null,
    "escapedName": "puer-mock",
    "name": "puer-mock",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/puer-mock/-/puer-mock-1.2.0.tgz",
  "_shasum": "b7b16087710a557386434f0201116495df5b5dfb",
  "_shrinkwrap": null,
  "_spec": "puer-mock",
  "_where": "E:\\ygg",
  "author": {
    "name": "Sun"
  },
  "bugs": {
    "url": "https://github.com/ufologist/puer-mock/issues"
  },
  "dependencies": {
    "mockjs": "^1.0.1-beta2",
    "strip-json-comments": "^2.0.1"
  },
  "description": "Puer + Mock.js = A configurable mock server with configurable mock(random) data.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b7b16087710a557386434f0201116495df5b5dfb",
    "tarball": "https://registry.npmjs.org/puer-mock/-/puer-mock-1.2.0.tgz"
  },
  "homepage": "https://github.com/ufologist/puer-mock",
  "keywords": [
    "puer",
    "mock",
    "random"
  ],
  "license": "MIT",
  "main": "src/puer-mock.js",
  "maintainers": [
    {
      "name": "ufologist",
      "email": "klsforver@gmail.com"
    }
  ],
  "name": "puer-mock",
  "optionalDependencies": {},
  "readme": "# puer-mock\r\n\r\n[![NPM version][npm-image]][npm-url] [![changelog][changelog-image]][changelog-url] [![license][license-image]][license-url]\r\n\r\n[npm-image]: https://img.shields.io/npm/v/puer-mock.svg?style=flat-square\r\n[npm-url]: https://npmjs.org/package/puer-mock\r\n[license-image]: https://img.shields.io/badge/License-MIT-blue.svg?style=flat-square\r\n[license-url]: https://github.com/ufologist/puer-mock/blob/master/LICENSE\r\n[changelog-image]: https://img.shields.io/badge/CHANGE-LOG-blue.svg?style=flat-square\r\n[changelog-url]: https://github.com/ufologist/puer-mock/blob/master/CHANGELOG.md\r\n\r\n[Puer](https://github.com/leeluolee/puer) + [Mock.js](https://github.com/nuysoft/Mock) = A configurable mock server with configurable mock(random) data.\r\n\r\nStart a mock server never ever so easy and configurable, no code needed, you only need config some mock api route and some mock data template, it all done! \r\n\r\n## features\r\n\r\n* effective immediately when config changed\r\n* JSONP support\r\n* CORS support\r\n* built-in API doc\r\n\r\n## install\r\n\r\nPlease install [puer](https://github.com/leeluolee/puer) first.\r\n\r\n> Puer - more than a live-reload server , built for efficient frontend development\r\n\r\n```\r\nnpm install puer -g\r\n```\r\n\r\nAnd then install `puer-mock` package in your project root directory.\r\n\r\n```\r\ncd yourprojectdir\r\nnpm install puer-mock\r\n```\r\n\r\nIf your project has a `package.json` file, suggest save `puer-mock` to `devDependencies`.\r\n\r\n```\r\ncd yourprojectrootdir\r\nnpm install puer-mock --save-dev\r\n```\r\n\r\n## usage\r\n\r\n1. copy `node_modules/puer-mock/example` files to your project root directory\r\n2. `cd yourprojectrootdir`\r\n3. `puer -a _mockserver.js`\r\n\r\n   You may define a npm script in `package.json`, then use `npm run dev` next time. \r\n\r\n   ```json\r\n   \"dev\": \"puer -a _mockserver.js\"\r\n   ```\r\n\r\n4. view mock api\r\n  * open `http://localhost:8000/api/configdemo-response/mock` view mock api return mock data\r\n  * open `http://localhost:8000/api/configdemo-response/mock?callback=test` view mock api return mock data by JSONP\r\n  * open `http://localhost:8000/_apidoc.html` view built-in all mock api doc\r\n5. define your mock api in `_mockserver.json`\r\n6. view your mock api(Yes! it with immediate effect)\r\n\r\n## config\r\n\r\nThe minimal `_mockserver.json`\r\n\r\n```json\r\n{\r\n    \"api\": {\r\n        \"GET /api/users\": {\r\n            \"response\": {}\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nPlease view [mockserver config doc](https://github.com/ufologist/puer-mock/blob/master/_mockserver-config.md) for more detail info.\r\n\r\nYou can see more settings to config mock server in [`_mockserver.json`](https://github.com/ufologist/puer-mock/blob/master/example/_mockserver.json).\r\n\r\n* comment is nice\r\n* config route and mock response data template is so easy\r\n* more data template please see [Mock.js examples](http://mockjs.com/examples.html)\r\n* disable a route is convenient\r\n* mock server will effective immediately when you changed `_mockserver.json`\r\n\r\n## customize\r\n\r\n* You may customize mock api doc\r\n  * You may customize `/_apidoc` route direct service a more graceful doc\r\n\r\n    ```javascript\r\n    // _mockserver.js\r\n    module.exports = require('puer-mock')(null, null, function(mockConfig) {\r\n        // 任你自由发挥\r\n        return '<pre>' + JSON.stringify(mockConfig, null, 4) + '</pre>';\r\n    });\r\n    ```\r\n\r\n  * You may customize `/_apidoc.html` which get mock api JSON from `/_apidoc`, you may totally implement it by yourself\r\n\r\n* Play it fun with your imagination.\r\n\r\n  ```javascript\r\n  // _mockserver.js\r\n  var puerMock = require('puer-mock');\r\n  var routeConfig = puerMock();\r\n  // 其实你完全可以这样来玩, 在这里接着定义 route 即可, 发挥你的想象力\r\n  // 例如定义一个常用的 500 接口, 来测试服务器报错的情况\r\n  routeConfig['GET /500'] = function(request, response, next) {\r\n      response.status(500).end();\r\n  };\r\n  module.exports = routeConfig;\r\n  ```\r\n\r\n## example\r\n\r\n眼见为实耳听为虚, puer-mock 让你一秒钟就能拥有一个强大的 mock server, 所以请不要再自己手工做假数据了, 赶快尝试一下让你的工作效率翻番吧!\r\n\r\n### 配置 API 并生成随机数据\r\n![puer-mock-example](https://ufologist.github.io/puer-mock/puer-mock-example.png?v1)\r\n\r\n### 查看所有的 API 接口文档\r\n\r\n通过 `/_apidoc.html` 查看接口文档\r\n\r\n![puer-mock-api-doc-html](https://ufologist.github.io/puer-mock/puer-mock-api-doc-html.png?v1)\r\n\r\n通过 `/_apidoc` 直接查看 JSON 数据, 即查看 mock server 配置了哪些 API(使用 [FeHelper 插件](https://www.baidufe.com/fehelper) 格式化了 JSON 数据)\r\n\r\n![puer-mock-api-doc](https://ufologist.github.io/puer-mock/puer-mock-api-doc.png?v1)\r\n\r\n## one more thing\r\n\r\n谁需要这个工具\r\n* 前端/APP端\r\n* 任何与后端接口打交道的人\r\n* [为什么你需要一个 mock server](https://github.com/ufologist/puer-mock/blob/master/why-your-need-a-mock-server.md)\r\n\r\n感谢 puer 提供了如此强大的 mock 机制, 感谢 Mock.js 带来的假数据, 我才有幸做了这么一个扩展工具.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ufologist/puer-mock.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.2.0"
}
